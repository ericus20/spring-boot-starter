<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext
   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd
   http://www.liquibase.org/xml/ns/dbchangelog
   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

  <changeSet author="Eric" id="persistent_logins_0">
    <sql endDelimiter="/">
      CREATE TABLE IF NOT EXISTS persistent_logins (
        series varchar(64) not null,
        last_used timestamp(6) not null,
        token varchar(64) not null,
        username varchar(64) not null,
        primary key (series)
      );
    </sql>
  </changeSet>

  <changeSet author="Eric" id="revinfo_0">
    <sql endDelimiter="/">
      CREATE TABLE IF NOT EXISTS revinfo (
         rev integer generated by default as identity,
         revtstmp bigint,
         primary key (rev)
      );
    </sql>
  </changeSet>

  <changeSet author="Eric" id="role_0">
    <sql endDelimiter="/">
      CREATE TABLE IF NOT EXISTS role (
        id integer not null,
        name varchar(255),
        primary key (id)
      );
    </sql>
  </changeSet>

  <changeSet author="Eric" id="user_history_0">
    <sql endDelimiter="/">
      CREATE TABLE IF NOT EXISTS user_history (
        id bigint not null,
        created_at timestamp(6),
        created_by varchar(255) not null,
        public_id varchar(255) not null,
        updated_at timestamp(6),
        updated_by varchar(255),
        version smallint not null,
        user_history_type smallint check (user_history_type between 0 and 5),
        user_id bigint,
        primary key (id)
      );
    </sql>
  </changeSet>

  <changeSet author="Eric" id="user_role_0">
    <sql endDelimiter="/">
      CREATE TABLE IF NOT EXISTS user_role (
        id bigint not null,
        created_at timestamp(6),
        created_by varchar(255) not null,
        public_id varchar(255) not null,
        updated_at timestamp(6),
        updated_by varchar(255),
        version smallint not null,
        role_id integer,
        user_id bigint,
        primary key (id)
      );
    </sql>
  </changeSet>

  <changeSet author="Eric" id="users_0">
    <sql endDelimiter="/">
      CREATE TABLE IF NOT EXISTS users (
        id bigint not null,
        created_at timestamp(6),
        created_by varchar(255) not null,
        public_id varchar(255) not null,
        updated_at timestamp(6),
        updated_by varchar(255),
        version smallint not null,
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        email varchar(255) not null,
        enabled boolean not null,
        failed_login_attempts integer not null,
        first_name varchar(255),
        last_name varchar(255),
        last_successful_login timestamp(6),
        middle_name varchar(255),
        password varchar(255),
        phone varchar(255),
        profile_image varchar(255),
        username varchar(50) not null,
        verification_token varchar(255),
        primary key (id)
      );
    </sql>
  </changeSet>

  <changeSet author="Eric" id="users_audit_log_0">
    <sql endDelimiter="/">
      CREATE TABLE IF NOT EXISTS users_audit_log (
        id bigint not null,
        rev integer not null,
        revtype smallint,
        revend integer,
        account_non_expired boolean,
        account_non_locked boolean,
        credentials_non_expired boolean,
        email varchar(255),
        enabled boolean,
        failed_login_attempts integer,
        first_name varchar(255),
        last_name varchar(255),
        last_successful_login timestamp(6),
        middle_name varchar(255),
        password varchar(255),
        phone varchar(255),
        profile_image varchar(255),
        username varchar(255),
        verification_token varchar(255),
        primary key (rev, id)
      );
    </sql>
  </changeSet>

</databaseChangeLog>