plugins {
    id 'org.springframework.boot' version '2.6.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.coditory.integration-test' version '1.3.0'
    id 'org.owasp.dependencycheck' version '7.0.1'
    id 'com.diffplug.spotless' version '6.3.0'
    id 'eclipse'
    id 'jacoco'
    id 'idea'
    id 'java'
    id 'pmd'
}

configurations.all {
    resolutionStrategy.force 'commons-io:commons-io:2.11.0'
}

group = 'com.developersboard'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = '1.4.2.Final'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Dev Tools
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // caching
    implementation 'org.ehcache:ehcache'
    implementation 'org.hibernate:hibernate-jcache'
    implementation 'org.ehcache:ehcache-transactions'

    // Utilities
    implementation 'commons-io:commons-io'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'com.fasterxml.jackson:jackson-bom:2.13.2'
    implementation('com.fasterxml.jackson.core:jackson-databind') {
        version {
            strictly '2.13.2.1'
        }
    }

    // Database Tools
    implementation 'com.h2database:h2:2.1.210'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    implementation 'org.liquibase:liquibase-core:4.9.0'

    // MapStruct for Object Mapping
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // Testing
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.mockito:mockito-inline'
    testImplementation 'com.icegreen:greenmail-junit5:1.6.7'
    testImplementation 'com.jparams:to-string-verifier:1.4.8'
    testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.10'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.withType(Test) {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    executionData(fileTree(project.buildDir).include("jacoco/*.exec"))
    reports {
        xml.required = true
        html.required = true
        csv.required = true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/exception/*",
                    "**/enums/*",
                    "**/constant/*",
                    "**/config/*"
            ])
        }))
    }
}

spotless {
    format 'misc', {
        // define the files to apply `misc` to
        target '*.gradle', '*.md', '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }

    java {

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
        removeUnusedImports()
        googleJavaFormat()
    }
}
